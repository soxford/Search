package search;

/**
 * Tree Search implements the tree search algorithm.
 * No checking is done for repeated states so it is recommended that graph search is used if the search space is a general graph and not a tree
 * @author Simon Campbell <simonhmcampbell@gmail.com>
 *
 */
public class TreeSearch extends FrontierSearch {


	public TreeSearch(Frontier frontier) {
		super(frontier);
	}
	
	@Override
	protected void initializeSearch(State root) {
		//clear the frontier
		frontier.clear();
		//set frontier to {{node(initial state, empty path)}}
		frontier.add(new Node(null, null, root));
		this.lastSearchNodeCount = 1;		
	}
	
	@Override
	protected void updateSearchSets(State state) {

	}

	@Override
	protected void expandState(Node nextCandidate) {
		for(Action a: nextCandidate.state.getApplicableActions()){
			frontier.add(new Node(nextCandidate, a, nextCandidate.state.getActionResult(a)));
			this.lastSearchNodeCount++; //keep count of nodes generated by the search
		}
	}
}
